Callback functions:
You can pass the callback function as an argument to another function.
Execution: The function receiving the callback will execute the callback at some point during execution(often at the end or after an asynchronous operation is done)
Example:
function mainfunction(callback){
console.log(“Executing main function”);
callback()
}
function callbackFunction(){
console.log(“callback function executed”)
}
mainfunction(callback);

Explanation:
Mainfunction takes a parameter known callback
Callback function is passed as an argument to mainfunction inside mainfunction  , the callback function

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <!-- <script>
    function mainfunction(callback){
        console.log("Executing main function");
        callback()
        }
        function callbackFunction(){
        console.log("callback function executed")
        }
        mainfunction(callbackFunction);
        
   </script>  -->

    <!-- <script>
    function greet(name,callback){
        console.log("hello "+name);
        callback();
    }
    function goodbye(){
        console.log("Goodbye");
    }
    greet("Varsha",goodbye);
   </script> -->

    <!-- <script>
    function greet(name,callback){
        console.log("hello "+name);
        callback();
    }
    greet("Varsha",function(){
        console.log("goodbye!")
    });
   </script> -->
    <script>
        function fetchData(callback) {
            console.log("Fetching data..")
            setTimeout(function () {
                console.log("Data fetched");
                callback();
            }, 2000);
        }
        function processData() {
            console.log("processing fetched data")
        }
        fetchData(processData)
    </script>
</body>

</html>
