Promise: used to check whether an event is completed or not. It is considered as an object. Mainly used for asynchronous function.
It allows to handle asynchronous task more efficiently than callback functions.
Three states
1)	Pending: the initial state, still not completed(continuing)
2)	Fulfilled: task completed.
3)	Rejected: the operation is failed.
Exp:
1.	To create a promise-new promise()
Two parameters-
Resolve: to mark the promise as successful.
Reject:  mark it as failed.
2.	Handling the result:
.then() method is called when promise is fulfilled. It will receive the result from resolve().
.catch() method is called if the promise is rejected it receives the error message from reject().

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <!-- <script>
        let mypromise = new Promise((resolve,reject)=>{
            let success=true;
            if(success){
                resolve("The operation is successfull.");
            }else{
                reject("The operation failed.");
            }
        });
        mypromise
        .then(result=>{
            console.log(result);
        });
        mypromise
        .catch(error=>{
            console.log(error);
        });
    </script> -->

    <!-- <script>
        // Changing promises
        let mypromise = new Promise((resolve,reject)=>{
            resolve(5);
        })
        mypromise
        .then(result=>{
            console.log(result);
            return result*2;
        })
        .then(result=>{
            console.log(result);
            return result+3;
        })
        .then(result=>{
            console.log(result);
        })
        .catch(error=>{
            console.log(error);
        })
    </script> -->
    <script>
    let pro=new Promise((resolve,reject)=>{
        resolve(5);
    })
    pro.then(result=>{
        console.log(result)
        setTimeout((pro)=>{
            console.log("success")
        },3000)
    })
</script>
</body>
</html>
